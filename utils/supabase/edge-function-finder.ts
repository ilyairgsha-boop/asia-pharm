/**
 * Edge Function Finder - –Ω–∞—Ö–æ–¥–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π URL –¥–ª—è Edge Function
 * 
 * –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏:
 * import { findEdgeFunction } from './utils/supabase/edge-function-finder';
 * await findEdgeFunction();
 */

export async function findEdgeFunction() {
  const projectId = 'boybkoyidxwrgsayifrd';
  const anonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImJveWJrb3lpZHh3cmdzYXlpZnJkIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NjE4NDI3ODEsImV4cCI6MjA3NzQxODc4MX0.1R7AMGegpzlJL45AaeT2BJHQi4-Oswe1tMcAYXK8e2Y';
  
  const possibleNames = [
    'make-server-a75b5353',
    'server',
    'asia-pharm-server',
    'api',
    'make-server',
  ];
  
  console.log('üîç –ü–æ–∏—Å–∫ Edge Function...');
  console.log('');
  
  for (const name of possibleNames) {
    const url = `https://${projectId}.supabase.co/functions/v1/${name}`;
    
    try {
      console.log(`–ü—Ä–æ–±—É—é: ${name}...`);
      
      const response = await fetch(url, {
        method: 'GET',
        headers: {
          'Authorization': `Bearer ${anonKey}`,
          'apikey': anonKey,
          'Content-Type': 'application/json',
        },
      });
      
      console.log(`  Status: ${response.status}`);
      
      if (response.status === 200) {
        const data = await response.json();
        console.log('  ‚úÖ –ù–ê–ô–î–ï–ù–ê!');
        console.log('  –û—Ç–≤–µ—Ç:', data);
        console.log('');
        console.log('‚ïî‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïó');
        console.log('‚ïë  ‚úÖ Edge Function –Ω–∞–π–¥–µ–Ω–∞!                ‚ïë');
        console.log('‚ïö‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïê‚ïù');
        console.log('');
        console.log(`–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–º—è: ${name}`);
        console.log(`–ü–æ–ª–Ω—ã–π URL: ${url}`);
        console.log('');
        console.log('–û–±–Ω–æ–≤–∏—Ç–µ /utils/supabase/client.ts:');
        console.log(`  getServerUrl: (route) => \`https://${projectId}.supabase.co/functions/v1/${name}\${route}\``);
        return { name, url, data };
      } else if (response.status === 404) {
        console.log('  ‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–∞ (404)');
      } else {
        const text = await response.text();
        console.log(`  ‚ö†Ô∏è –ù–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–π —Å—Ç–∞—Ç—É—Å: ${text.substring(0, 100)}`);
      }
    } catch (error: any) {
      console.log(`  ‚ùå –û—à–∏–±–∫–∞: ${error.message}`);
    }
    
    console.log('');
  }
  
  console.log('‚ùå Edge Function –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –Ω–∏ –ø–æ–¥ –æ–¥–Ω–∏–º –∏–∑ –∏–∑–≤–µ—Å—Ç–Ω—ã—Ö –∏–º–µ–Ω');
  console.log('');
  console.log('–í–æ–∑–º–æ–∂–Ω—ã–µ –ø—Ä–∏—á–∏–Ω—ã:');
  console.log('1. Function –Ω–µ –∑–∞–¥–µ–ø–ª–æ–µ–Ω–∞');
  console.log('2. Function –∏–º–µ–µ—Ç –¥—Ä—É–≥–æ–µ –∏–º—è');
  console.log('3. –ü—Ä–æ–±–ª–µ–º–∞ —Å –ø—Ä–æ–µ–∫—Ç–æ–º Supabase');
  console.log('');
  console.log('–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤ Supabase Dashboard:');
  console.log('https://supabase.com/dashboard/project/boybkoyidxwrgsayifrd/functions');
  
  return null;
}

// –ì–ª–æ–±–∞–ª—å–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏
if (typeof window !== 'undefined') {
  (window as any).findEdgeFunction = findEdgeFunction;
}
